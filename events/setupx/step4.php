<?php
/*
	Helios Calendar - Professional Event Management System
	Copyright © 2006 Refresh Web Development [http://www.refreshwebdev.com]
	
	Developed By: Chris Carlevato <chris@refreshwebdev.com>
	
	For the most recent version, visit the Helios Calendar website:
	[http://www.helioscalendar.com]
	
	License Information is found in docs/license.html
	
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	|	Please do not edit this or any of the setup files							|
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
	if(!isset($_SESSION['license']) && !isset($_SESSION['valid'])){?>
		<br /><a href="<?echo CalRoot;?>/setup/" class="eventMain">Click here to begin Helios setup.</a>
<?	} else {
		if(!isset($_POST['firstname'])){?>
			<script language="JavaScript">
			//<!--
			function checkEmail(obj) {
				if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(obj.value)){
					return 0;
				} else {
					return 1;
				}//end if
			}//end chkEmail
			
			function chkFrm(){
			dirty = 0;
			warn = "Account cannot be created because of the following reasons:\n";
				
				if(document.frm.firstname.value == ''){
					dirty = 1;
					warn = warn + '\n*First Name is Required';
				}//end if
				
				if(document.frm.lastname.value == ''){
					dirty = 1;
					warn = warn + '\n*Last Name is Required';
				}//end if
				
				if(document.frm.email.value == ''){
					dirty = 1;
					warn = warn + '\n*Email is Required';
				}//end if
				
				if(document.frm.email.value != '' && checkEmail(document.frm.email) == 1){
					dirty = 1;
					warn = warn + '\n*Email Format is Invalid';
				}//end if
				
				if(document.frm.password.value == ''){
					dirty = 1;
					warn = warn + '\n*Password is Required';
				}//end if
				
				if(dirty > 0){
					alert(warn + '\n\nPlease make the required changes and try again.');
					return false;
				} else {
					return true;
				}//end if
				
			}//end chkFrm
			//-->
			</script>
			<br />
			Complete the form below with the information for your administration console account.
			<br /><br />
			When setup is complete you will use this account to login to your Helios admin console, so keep it
			for your records.
			<br /><br />
			
			<form name="frm" id="frm" method="post" action="<?echo CalRoot;?>/setup/index.php?step=4" onsubmit="return chkFrm();">
			<fieldset>
				<legend>Admin Account Settings</legend>
				<div class="frmOpt">
					<label for="firstname">First Name:</label>
					<input tabindex="1" size="20" maxlength="50" type="text" name="firstname" id="firstname" value="" class="setupText" />
				</div>
				<div class="frmOpt">
					<label for="lastname">Last Name:</label>
					<input tabindex="2" size="20" maxlength="50" type="text" name="lastname" id="lastname" value="" class="setupText" />
				</div>
				<div class="frmOpt">
					<label for="email">Email:</label>
					<input tabindex="3" size="30" maxlength="100" type="text" name="email" id="email" value="" class="setupText" />&nbsp;<? appInstructionsIcon("Admin Email Address", "This will be used as the username for the account."); ?>
				</div>
				<div class="frmOpt">
					<label for="password">Password:</label>
					<input tabindex="4" size="15" maxlength="15" type="password" name="password" id="password" value="" class="setupText" />
				</div>
			</fieldset>
			<br />
			<div align="right"><input tabindex="5" type="submit" name="submit" id="submit" value="Setup Database" class="eventButton" /></div>
			</form>
	<?	} else {	
			echo "<br />";
			eval(base64_decode('LypJZiB5b3UgY2FuIHJlYWQgdGhpcyB5b3UgaGF2ZSBicm9rZW4gdGhlIEhlbGlvcyBFVUwuKi8/Pg0KCQkJU2V0dXAgd2lsbCBub3cgYXR0ZW1wdCB0byBjcmVhdGUgeW91ciBIZWxpb3MgZGF0YWJhc2UuLi48YnIgLz48YnIgLz4NCgkJPD8JJGRiY29ubmVjdGlvbiA9IG15c3FsX2Nvbm5lY3QoREFUQUJBU0VfSE9TVCwgREFUQUJBU0VfVVNFUiwgREFUQUJBU0VfUEFTUyk7DQoJCQkNCgkJCSRzdG9wID0gMDsNCgkJCW15c3FsX3NlbGVjdF9kYihEQVRBQkFTRV9OQU1FLCRkYmNvbm5lY3Rpb24pOw0KCQkJZWNobyAiQ2hlY2tpbmcgPGk+IiAuIERBVEFCQVNFX05BTUUgLiAiPC9pPiBkYXRhYmFzZS4uLiI7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIkNSRUFURSBEQVRBQkFTRSBJRiBOT1QgRVhJU1RTICIgLiBEQVRBQkFTRV9OQU1FKTsNCgkJCWlmKG15c3FsX2FmZmVjdGVkX3Jvd3MoKSA+IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICJDcmVhdGVkPGJyIC8+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiQWxyZWFkeSBFeGlzdHM8YnIgLz4iOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJhZG1pbjwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gImFkbWluIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsRmlyc3ROYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxMYXN0TmFtZSB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsRW1haWwgdmFyY2hhcigxMDApIGRlZmF1bHQgTlVMTCxQYXNzd3JkIHZhcmNoYXIoMzIpIGRlZmF1bHQgTlVMTCxJc0FjdGl2ZSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLExvZ2luQ250IGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsTGFzdExvZ2luIGRhdGV0aW1lIGRlZmF1bHQgTlVMTCxTdXBlckFkbWluIHRpbnlpbnQoMykgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsU2hvd0luc3RydWN0aW9ucyB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLFBDS2V5IHZhcmNoYXIoMzIpIGRlZmF1bHQgTlVMTCxQUklNQVJZIEtFWSAoUGtJRCksVU5JUVVFIEtFWSBQa0lEIChQa0lEKSkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJhZG1pbiciKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQllY2hvICI8YnIgLz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtDcmVhdGluZyBBZG1pbiBBY2NvdW50Li4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gImFkbWluIFZBTFVFUygnMScsJyIgLiAkX1BPU1RbJ2ZpcnN0bmFtZSddIC4gIicsJyIgLiAkX1BPU1RbJ2xhc3RuYW1lJ10gLiAiJywnIiAuICRfUE9TVFsnZW1haWwnXSAuICInLCciIC4gbWQ1KG1kNSgkX1BPU1RbJ3Bhc3N3b3JkJ10pIC4gJF9QT1NUWydlbWFpbCddKSAuICInLCcxJywgJzAnLCBOVUxMLCAnMCcsICcxJywgTlVMTCkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0VMRUNUICogRlJPTSAiIC4gSENfVGJsUHJlZml4IC4gImFkbWluIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJDQoJCQkNCgkJCWVjaG8gIjxiciAvPkNyZWF0aW5nIDxpPiIgLiBIQ19UYmxQcmVmaXggLiAiYWRtaW5sb2dpbmhpc3Rvcnk8L2k+IHRhYmxlLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJDUkVBVEUgVEFCTEUgIiAuIEhDX1RibFByZWZpeCAuICJhZG1pbmxvZ2luaGlzdG9yeSAoUGtJRCBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGF1dG9faW5jcmVtZW50LEFkbWluSUQgaW50KDExKSB1bnNpZ25lZCBkZWZhdWx0IE5VTEwsSVAgdmFyY2hhcigxNikgZGVmYXVsdCBOVUxMLENsaWVudCBMT05HVEVYVCBkZWZhdWx0IE5VTEwsTG9naW5UaW1lIGRhdGV0aW1lIGRlZmF1bHQgTlVMTCxQUklNQVJZIEtFWSAoUGtJRCksIFVOSVFVRSBLRVkgUGtJRCAoUGtJRCkpOyIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gImFkbWlubG9naW5oaXN0b3J5JyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gImFkbWlucGVybWlzc2lvbnM8L2k+IHRhYmxlLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJDUkVBVEUgVEFCTEUgIiAuIEhDX1RibFByZWZpeCAuICJhZG1pbnBlcm1pc3Npb25zIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsRXZlbnRFZGl0IGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxFdmVudFBlbmRpbmcgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLEV2ZW50Q2F0ZWdvcnkgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFVzZXJFZGl0IGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxBZG1pbkVkaXQgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLE5ld3NsZXR0ZXIgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFNldHRpbmdzIGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJywgVG9vbHMgaW50KDMpIFVOU0lHTkVEIERFRkFVTFQgXCIwXCIgTk9UIE5VTEwsIFJlcG9ydHMgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLEFkbWluSUQgaW50KDExKSB1bnNpZ25lZCBkZWZhdWx0IE5VTEwsSXNBY3RpdmUgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFBSSU1BUlkgS0VZICAoUGtJRCkpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAiYWRtaW5wZXJtaXNzaW9ucyciKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQllY2hvICI8YnIgLz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtTZXR0aW5nIEFkbWluIFBlcm1pc3Npb24uLi4iOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAiYWRtaW5wZXJtaXNzaW9ucyBWQUxVRVMoJzEnLCAnMScsICcxJywgJzEnLCAnMScsICcxJywgJzEnLCAnMScsICcxJywgJzEnLCAnMScsICcxJykiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0VMRUNUICogRlJPTSAiIC4gSENfVGJsUHJlZml4IC4gImFkbWlucGVybWlzc2lvbnMiKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJjYXRlZ29yaWVzPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAiY2F0ZWdvcmllcyAoUGtJRCBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGF1dG9faW5jcmVtZW50LENhdGVnb3J5TmFtZSB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsUGFyZW50SUQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxJc0FjdGl2ZSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLFBhdGggdmFyY2hhcigxMDApIE5PVCBOVUxMIGRlZmF1bHQgJy8nLExldmVsIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsUFJJTUFSWSBLRVkgKFBrSUQpLCBVTklRVUUgS0VZIFBrSUQgKFBrSUQpKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gImNhdGVnb3JpZXMnIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJZWNobyAiPGJyIC8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7QWRkaW5nIERlZmF1bHQgQ2F0ZWdvcnkuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAiY2F0ZWdvcmllcyBWQUxVRVMoJzEnLCAnRXZlbnRzJywgJzAnLCAnMScsICcvJywgJzAnKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NICIgLiBIQ19UYmxQcmVmaXggLiAiY2F0ZWdvcmllcyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gImV2ZW50Y2F0ZWdvcmllczwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gImV2ZW50Y2F0ZWdvcmllcyAoRXZlbnRJRCBpbnQoMTEpIHVuc2lnbmVkIGRlZmF1bHQgTlVMTCxDYXRlZ29yeUlEIGludCgxMSkgdW5zaWduZWQgZGVmYXVsdCBOVUxMLEtFWSBFdmVudElEIChFdmVudElEKSxLRVkgQ2F0ZWdvcnlJRCAoQ2F0ZWdvcnlJRCkpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRjYXRlZ29yaWVzJyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCWVjaG8gIjxiciAvPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO0NyZWF0aW5nIERlZmF1bHQgRXZlbnQvQ2F0ZWdvcnkgUGFpcmluZy4uLiI7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJldmVudGNhdGVnb3JpZXMgVkFMVUVTKAknMScsICcxJykiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0VMRUNUICogRlJPTSAiIC4gSENfVGJsUHJlZml4IC4gImV2ZW50Y2F0ZWdvcmllcyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gImV2ZW50czwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gImV2ZW50cyAoUGtJRCBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGF1dG9faW5jcmVtZW50LFRpdGxlIHZhcmNoYXIoMTUwKSBkZWZhdWx0IE5VTEwsTG9jYXRpb25OYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxMb2NhdGlvbkFkZHJlc3MgdmFyY2hhcig3NSkgZGVmYXVsdCBOVUxMLExvY2F0aW9uQWRkcmVzczIgdmFyY2hhcig3NSkgZGVmYXVsdCBOVUxMLExvY2F0aW9uQ2l0eSB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsTG9jYXRpb25TdGF0ZSB2YXJjaGFyKDMwKSBkZWZhdWx0IE5VTEwsTG9jYXRpb25aaXAgdmFyY2hhcigxMSkgZGVmYXVsdCBOVUxMLERlc2NyaXB0aW9uIG1lZGl1bXRleHQsU3RhcnREYXRlIGRhdGUgZGVmYXVsdCBOVUxMLFN0YXJ0VGltZSB0aW1lIGRlZmF1bHQgTlVMTCxUQkQgaW50KDMpIGRlZmF1bHQgTlVMTCxFbmRUaW1lIHRpbWUgZGVmYXVsdCBOVUxMLENvbnRhY3ROYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxDb250YWN0RW1haWwgdmFyY2hhcig3NSkgZGVmYXVsdCBOVUxMLENvbnRhY3RQaG9uZSB2YXJjaGFyKDI1KSBkZWZhdWx0IE5VTEwsSXNBY3RpdmUgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcxJyxJc0FwcHJvdmVkIHRpbnlpbnQoMykgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsSXNCaWxsYm9hcmQgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxTZXJpZXNJRCB2YXJjaGFyKDIwKSBkZWZhdWx0IE5VTEwsU3VibWl0dGVkQnlOYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxTdWJtaXR0ZWRCeUVtYWlsIHZhcmNoYXIoNzUpIGRlZmF1bHQgTlVMTCxTdWJtaXR0ZWRBdCBkYXRldGltZSBkZWZhdWx0IE5VTEwsQWxlcnRTZW50IHRpbnlpbnQoMykgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsQ29udGFjdFVSTCB2YXJjaGFyKDEwMCkgZGVmYXVsdCBOVUxMLEFsbG93UmVnaXN0ZXIgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxTcGFjZXNBdmFpbGFibGUgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxQdWJsaXNoRGF0ZSBkYXRldGltZSBkZWZhdWx0IE5VTEwsVmlld3MgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxNZXNzYWdlIGxvbmd0ZXh0LERpcmVjdGlvbnMgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxEb3dubG9hZHMgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxFbWFpbFRvRnJpZW5kIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsVVJMQ2xpY2tzIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsTVZpZXdzIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsIExvY0lEIElOVCgxMSkgIFVOU0lHTkVEIERFRkFVTFQgXCIwXCIsIFBSSU1BUlkgS0VZIChQa0lEKSwgVU5JUVVFIEtFWSBQa0lEIChQa0lEKSkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJldmVudHMnIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJZWNobyAiPGJyIC8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Q3JlYXRpbmcgRGVmYXVsdCBFdmVudC4uLiI7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJldmVudHMgVkFMVUVTKCcxJywnIiAuIENhbE5hbWUgLiAiIE9wZW5zJywnT24gb3VyIHdlYnNpdGUnLCc2MCBNb25yb2UgQ2VudGVyIFN0IE5XJyxOVUxMLCdHcmFuZCBSYXBpZHMnLCdNSScsJzQ5NTAzJywnIFdlbGNvbWUgdG8geW91ciBuZXcgSGVsaW9zIENhbGVuZGFyIHBvd2VyZWQgZXZlbnQgd2Vic2l0ZS48YnIgLz48YnIgLz5IZXJlIGFyZSBhIGZldyBsaW5rcyB5b3Ugd2lsbCBwcm9iYWJseSB3YW50IHRvIGtlZXAgY2xvc2UuPGJyIC8+PGJyIC8+PGEgaHJlZj1cImh0dHA6Ly93d3cuaGVsaW9zY2FsZW5kYXIuY29tXCIgY2xhc3M9XCJldmVudE1haW5cIiB0YXJnZXQ9XCJuZXdcIj5IZWxpb3MgV2Vic2l0ZTwvYT48YnIgLz4gPGEgaHJlZj1cImh0dHA6Ly9jb2RleC5oZWxpb3NjYWxlbmRhci5jb21cIiBjbGFzcz1cImV2ZW50TWFpblwiIHRhcmdldD1cIm5ld1wiPlRoZSBDb2RleDwvYT48YnIgLz4gPGEgaHJlZj1cImh0dHA6Ly9kZXYuaGVsaW9zY2FsZW5kYXIuY29tXCIgY2xhc3M9XCJldmVudE1haW5cIiB0YXJnZXQ9XCJuZXdcIj5UaGUgRGV2ZWxvcG1lbnQgQmxvZzwvYT48YnIgLz48YnIgLz5UaGFuayB5b3UgZm9yIGNob29zaW5nIEhlbGlvcy4nLCciIC4gZGF0ZSgiWS1tLWQiKSAuICInLE5VTEwsJzEnLE5VTEwsTlVMTCxOVUxMLE5VTEwsJzEnLCcxJywnMScsTlVMTCxOVUxMLE5VTEwsTlVMTCwnMCcsJyIgLiBDYWxSb290IC4gIicsJzAnLCcwJywnIiAuIGRhdGUoIlktbS1kIikgLiAiIDAwOjAwOjAwJywnMCcsTlVMTCwnMCcsJzAnLCcwJywnMCcsJzAnLCcwJyk7Iik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNFTEVDVCAqIEZST00gIiAuIEhDX1RibFByZWZpeCAuICJldmVudHMiKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCWVjaG8gIjxiciAvPkNyZWF0aW5nIDxpPiIgLiBIQ19UYmxQcmVmaXggLiAibG9jYXRpb25zPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAibG9jYXRpb25zIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsTmFtZSB2YXJjaGFyKDEwMCksQWRkcmVzcyB2YXJjaGFyKDc1KSxBZGRyZXNzMiB2YXJjaGFyKDc1KSxDaXR5IHZhcmNoYXIoNTApLFN0YXRlIHZhcmNoYXIoMzApLENvdW50cnkgdmFyY2hhcig1MCksWmlwIHZhcmNoYXIoMTUpLFVSTCB2YXJjaGFyKDEwMCksUGhvbmUgdmFyY2hhcigyNSkgREVGQVVMVCAnMCcsRW1haWwgdmFyY2hhcig3NSksRGVzY3JpcHQgbG9uZ3RleHQsSXNQdWJsaWMgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBERUZBVUxUICcwJyxJc0FjdGl2ZSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIERFRkFVTFQgJzAnLFVSTENsaWNrcyBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIERFRkFVTFQgJzAnLExhdCB2YXJjaGFyKDI1KSxMb24gdmFyY2hhcigyNSksUFJJTUFSWSBLRVkgKFBrSUQpLFVOSVFVRSBLRVkgUGtJRCAoUGtJRCkpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAibG9jYXRpb25zJyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJuZXdzbGV0dGVyczwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gIm5ld3NsZXR0ZXJzIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsVGVtcGxhdGVOYW1lIHZhcmNoYXIoMjUwKSBkZWZhdWx0IE5VTEwsVGVtcGxhdGVTb3VyY2UgbG9uZ3RleHQsSXNBY3RpdmUgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxQUklNQVJZIEtFWSAoUGtJRCksIFVOSVFVRSBLRVkgUGtJRCAoUGtJRCkpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAibmV3c2xldHRlcnMnIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gInJlZ2lzdHJhbnRzPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAicmVnaXN0cmFudHMgKFBrSUQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBhdXRvX2luY3JlbWVudCxOYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxFbWFpbCB2YXJjaGFyKDc1KSBkZWZhdWx0IE5VTEwsUGhvbmUgdmFyY2hhcigyNSkgZGVmYXVsdCBOVUxMLEFkZHJlc3MgdmFyY2hhcig3NSkgZGVmYXVsdCBOVUxMLEFkZHJlc3MyIHZhcmNoYXIoNzUpIGRlZmF1bHQgTlVMTCxDaXR5IHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxTdGF0ZSBjaGFyKDIpIGRlZmF1bHQgTlVMTCxaaXAgdmFyY2hhcig1KSBkZWZhdWx0IE5VTEwsRXZlbnRJRCBpbnQoMTEpIHVuc2lnbmVkIGRlZmF1bHQgTlVMTCxJc0FjdGl2ZSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLFJlZ2lzdGVyZWRBdCBkYXRldGltZSBkZWZhdWx0IE5VTEwsUFJJTUFSWSBLRVkgKFBrSUQpLCBVTklRVUUgS0VZIFBrSUQgKFBrSUQpKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gInJlZ2lzdHJhbnRzJyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJzZW5kdG9mcmllbmQ8L2k+IHRhYmxlLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJDUkVBVEUgVEFCTEUgIiAuIEhDX1RibFByZWZpeCAuICJzZW5kdG9mcmllbmQgKFBrSUQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBhdXRvX2luY3JlbWVudCxNeU5hbWUgdmFyY2hhcigxMDApIGRlZmF1bHQgTlVMTCxNeUVtYWlsIHZhcmNoYXIoMTAwKSBkZWZhdWx0IE5VTEwsUmVjaXBpZW50TmFtZSB2YXJjaGFyKDEwMCkgZGVmYXVsdCBOVUxMLFJlY2lwaWVudEVtYWlsIHZhcmNoYXIoMTAwKSBkZWZhdWx0IE5VTEwsTWVzc2FnZSBsb25ndGV4dCxFdmVudElEIGludCgxMSkgdW5zaWduZWQgZGVmYXVsdCBOVUxMLElQQWRkcmVzcyB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsU2VuZERhdGUgZGF0ZXRpbWUgZGVmYXVsdCBOVUxMLFBSSU1BUlkgS0VZIChQa0lEKSwgVU5JUVVFIEtFWSBQa0lEIChQa0lEKSkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJzZW5kdG9mcmllbmQnIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJDQokZGVmYXVsdFRlbXBsYXRlID0gIjwhRE9DVFlQRSBIVE1MIFBVQkxJQyBcIi0vL1czQy8vRFREIEhUTUwgNC4wMSBUcmFuc2l0aW9uYWwvL0VOXCI+DQoNCjxodG1sPg0KPGhlYWQ+DQo8c3R5bGU+DQp0ZHsNCglmb250LWZhbWlseTogdGltZXM7DQoJZm9udC1zaXplOiAxMXB4Ow0KCX0NCjwvc3R5bGU+DQo8L2hlYWQ+DQoNCjxib2R5Pg0KDQo8dGFibGUgY2VsbHBhZGRpbmc9XCIwXCIgY2VsbHNwYWNpbmc9XCIwXCIgYm9yZGVyPVwiMFwiIHdpZHRoPVwiNjAwXCI+DQoJPHRyPg0KCQk8dGQgd2lkdGg9XCI0MTBcIiB2YWxpZ249XCJ0b3BcIj4NCgkJSGVsbG8gW2ZpcnN0bmFtZV0gW2xhc3RuYW1lXTxicj4NCgkJSGVyZSBpcyB0aGUgZXZlbnQgaW5mb3JtYXRpb24geW91IGFyZSByZWdpc3RlcmVkIGZvci4NCgkJPGJyPjxicj4NCg0KCQlbZXZlbnRzXQ0KCQk8YnI+PGJyPg0KDQoJCVZpc2l0OiBbY2FsZW5kYXJ1cmxdIHRvIGJyb3dzZSBhbGwgW2V2ZW50LWNvdW50XSBvdXIgZXZlbnRzLg0KCQk8YnI+PGJyPg0KCQlbZWRpdHJlZ2lzdHJhdGlvbl08YnI+DQoJCVt1bnN1YnNjcmliZV0NCgkJPC90ZD4NCgkJPHRkIHdpZHRoPVwiMTkwXCIgdmFsaWduPVwidG9wXCI+DQoJCTxiPkZlYXR1cmVkIEV2ZW50czwvYj48YnI+DQoNCgkJW2JpbGxib2FyZF0NCgkJPGJyPjxicj4NCg0KCQk8Yj5Nb3N0IFZpZXdlZDwvYj48YnI+DQoJCVttb3N0LXZpZXdlZF0NCg0KCQk8L3RkPg0KCTwvdHI+DQo8L3RhYmxlPg0KDQo8L2JvZHk+DQo8L2h0bWw+IjsNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Q3JlYXRpbmcgRGVmYXVsdCBUZW1wbGF0ZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJuZXdzbGV0dGVycyBWQUxVRVMoJzEnLCAnRGVmYXVsdCBUZW1wbGF0ZScsICciIC4gJGRlZmF1bHRUZW1wbGF0ZSAuICInLCAnMScpOyIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NICIgLiBIQ19UYmxQcmVmaXggLiAibmV3c2xldHRlcnMiKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5nczwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsU2V0dGluZ1ZhbHVlIHRleHQsUFJJTUFSWSBLRVkgKFBrSUQpLCBVTklRVUUgS0VZIFBrSUQgKFBrSUQpKTsiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyciKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQllY2hvICI8YnIgLz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtDb25maWd1cmluZyBEZWZhdWx0IFNldHRpbmdzLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMScsICcxJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzInLCAnMjAnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMycsICdZb3VyIGV2ZW50IGhhcyBiZWVuIGFwcHJvdmVkIGFuZCBpcyBub3cgYXZhaWxhYmxlIG9uIG91ciB3ZWJzaXRlLiBXZSBob3BlIHlvdSBjb250aW51ZSB0byB1c2Ugb3VyIGNhbGVuZGFyIGFuZCBzdWJtaXQgbW9yZSBldmVudHMgaW4gdGhlIGZ1dHVyZS4gVGhhbmsgeW91IGZvciB1c2luZyBvdXIgY2FsZW5kYXIgYW5kIGlmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMgcGxlYXNlIGZlZWwgZnJlZSB0byBjb250YWN0IHVzLicpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCc0JywgJ1lvdXIgZXZlbnQgaGFzIGJlZW4gZGVjbGluZWQgYW5kIHdpbGwgbm90IGJlIGF2YWlsYWJsZSBvbiBvdXIgd2Vic2l0ZS4gUGxlYXNlIGRvIG5vdCBsZXQgdGhpcyBkaXNjb3VyYWdlIHlvdSBmcm9tIHN1Ym1pdGluZyBtb3JlIGV2ZW50cyBpbiB0aGUgZnV0dXJlLiBUaGFuayB5b3UgZm9yIHVzaW5nIG91ciBjYWxlbmRhciBhbmQgaWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucyBwbGVhc2UgZmVlbCBmcmVlIHRvIGNvbnRhY3QgdXMuJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzUnLCAnSGVsaW9zLCBDYWxlbmRhcicpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCc2JywgJ1Bvd2VyZWQgYnkgdGhlIEhlbGlvcyBDYWxlbmRhci4nKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnNycsICcxJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzgnLCAnMCcpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCc5JywgJzAnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTAnLCAnMTAnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTEnLCAnMScpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcxMicsICcxMCcpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcxMycsICcxJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzE0JywgJ0YgZFMsIFknKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTUnLCAnMScpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcxNicsICciIC4gJF9TRVNTSU9OWydyZWduYW1lJ10gLiAiJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzE3JywgJyIgLiAkX1NFU1NJT05bJ3JlZ3VybCddIC4gIicpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcxOCcsICciIC4gJF9TRVNTSU9OWydyZWdlbWFpbCddIC4gIicpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcxOScsICciIC4gJF9TRVNTSU9OWydyZWdjb2RlJ10gLiAiJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzIwJywgTlVMTCk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzIxJywgJ01JJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzIyJywgJzAnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMjMnLCAnaDppIEEnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMjQnLCAnbS9kL1knKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMjUnLCAnMCcpOyIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MiKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJ1c2VyY2F0ZWdvcmllczwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJjYXRlZ29yaWVzIChVc2VySUQgaW50KDExKSB1bnNpZ25lZCBkZWZhdWx0IE5VTEwsQ2F0ZWdvcnlJRCBpbnQoMTEpIHVuc2lnbmVkIGRlZmF1bHQgTlVMTCxLRVkgQ2F0ZWdvcnlJRCAoQ2F0ZWdvcnlJRCksS0VZIFVzZXJJRCAoVXNlcklEKSkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJ1c2VyY2F0ZWdvcmllcyciKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbjwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsT2NjdXBhdGlvbiB2YXJjaGFyKDEwMCkgZGVmYXVsdCBOVUxMLElzQWN0aXZlIHRpbnlpbnQoMykgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMScsUFJJTUFSWSBLRVkgKFBrSUQpLCBVTklRVUUgS0VZIFBrSUQgKFBrSUQpKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uJyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCWVjaG8gIjxiciAvPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO0NyZWF0aW5nIFVzZXIgT2NjdXBhdGlvbiBPcHRpb25zLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMScsICdBY2NvdW50aW5nL0ZpbmFuY2lhbCcsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMicsICdDb21wdXRlciBSZWxhdGVkIChvdGhlciknLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzMnLCAnQ29tcHV0ZXIgUmVsYXRlZCAoaW50ZXJuZXQpJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCc0JywgJ0NvbnN1bHRpbmcnLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzUnLCAnQ3VzdG9tZXIgU2VydmljZS9TdXBwb3J0JywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCc2JywgJ0VkdWNhdGlvbi9UcmFpbmluZycsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnNycsICdFbmdpbmVlcmluZycsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnOCcsICdFeGVjdXRpdmUvU2VuaW9yIE1hbmFnZW1lbnQnLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzknLCAnR2VuZXJhbCBBZG1pbmlzdHJhdGl2ZS9TdXBlcnZpc29yJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxMCcsICdHb3Zlcm5tZW50L01pbGl0YXJ5JywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxMScsICdIb21lbWFrZXInLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzEyJywgJ01hbnVmYWN0dXJpbmcvUHJvZHVjdGlvbi9PcGVyYXRpb25zJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxMycsICdQcm9mZXNzaW9uYWwgKE1lZGljYWwuIExlZ2FsLiBFdGMpJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxNCcsICdSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQnLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzE1JywgJ1JldGlyZWQnLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzE2JywgJ1NhbGVzL01hcmtldGluZy9BZHZlcnRpc2luZycsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMTcnLCAnU2VsZi1FbXBsb3llZC9Pd25lcicsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMTgnLCAnU3R1ZGVudCcsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMTknLCAnVHJhZGVzbWFuL0NyYWZ0c21hbicsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMjAnLCAnVW5lbXBsb3llZC9CZXR3ZWVuIEpvYnMnLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzIxJywgJ090aGVyJywgJzEnKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24iKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJ1c2VyczwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJzIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsRmlyc3ROYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxMYXN0TmFtZSB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsRW1haWwgdmFyY2hhcig3NSkgZGVmYXVsdCBOVUxMLE9jY3VwYXRpb25JRCBpbnQoMTEpIGRlZmF1bHQgTlVMTCxaaXAgdmFyY2hhcigxMCkgZGVmYXVsdCBOVUxMLElzUmVnaXN0ZXJlZCB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLEdVSUQgdmFyY2hhcig1MCkgZGVmYXVsdCBOVUxMLEFkZGVkQnkgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxSZWdpc3RlcmVkQXQgZGF0ZXRpbWUgZGVmYXVsdCBOVUxMLFJlZ2lzdGVySVAgdmFyY2hhcigxNSkgZGVmYXVsdCBOVUxMLFBSSU1BUlkgS0VZIChQa0lEKSwgVU5JUVVFIEtFWSBQa0lEIChQa0lEKSkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJ1c2VycyciKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCWlmKCRzdG9wID09IDEpewk/Pg0KCQkJCTxiciAvPjxiciAvPg0KDQoJCQkJU2V0dXAgd2FzIHVuYWJsZSB0byBmdWxseSBjcmVhdGUgeW91ciBIZWxpb3MgZGF0YWJhc2UuIERlcGVuZGluZyBvbiB3aGljaCBzdGVwcyBmYWlsZWQgYWJvdmUgeW91IG1heSB3aXNoIHRvIHJlLXJ1biB0aGlzIHNldHVwLiBQbGVhc2UgdmVyaWZ5IHlvdXIgZGF0YWJhc2UgdXNlcg0KCQkJCWFjY291bnQgaXMgc2V0dXAgY29ycmVjdGx5LCBhbmQgaGFzIENyZWF0ZSBwZXJtaXNzaW9ucy48YnIgLz48YnIgLz5UaGVuIDxhIGhyZWY9Ijw/ZWNobyBDYWxSb290Oz8+L3NldHVwL2luZGV4LnBocD9zdGVwPTQiIGNsYXNzPSJldmVudE1haW4iPnRyeSB0aGlzIHN0ZXAgYWdhaW48L2E+Lg0KCQk8Pwl9IGVsc2Ugewk/Pg0KCQkJCTxiciAvPjxiciAvPg0KCQkJCUNvbmdyYXR1bGF0aW9ucy4gU2V0dXAgb2YgeW91ciBIZWxpb3MgQ2FsZW5kYXIgaXMgY29tcGxldGUuPGJyIC8+DQoJCQkJUGxlYXNlIGJlIHN1cmUgdG8gPGI+ZGVsZXRlIHRoZSBzZXR1cCBkaXJlY3Rvcnk8L2I+IGJlZm9yZSB1c2luZyBIZWxpb3MuDQoJCQkJPGJyIC8+PGJyIC8+DQoNCgkNCgkJCQk8YSBocmVmPSI8P2VjaG8gQ2FsUm9vdDs/Pi8iIGNsYXNzPSJldmVudE1haW4iIHRhcmdldD0iX2JsYW5rIj5DbGljayBIZXJlIEZvciBZb3VyIEhlbGlvcyBQdWJsaWMgQ2FsZW5kYXI8L2E+DQoJCQkJPGJyIC8+DQoJCQkJPGEgaHJlZj0iPD9lY2hvIENhbEFkbWluUm9vdDs/Pi8iIGNsYXNzPSJldmVudE1haW4iIHRhcmdldD0iX2JsYW5rIj5DbGljayBIZXJlIEZvciBZb3VyIEhlbGlvcyBBZG1pbmlzdHJhdGlvbiBDb25zb2xlPC9hPg0KCQk8Pwl9Ly9lbmQgaWY='));
		}//end if
}//end if