<?php
/*
	Helios Calendar - Professional Event Management System
	Copyright © 2006 Refresh Web Development [http://www.refreshwebdev.com]
	
	Developed By: Chris Carlevato <chris@refreshwebdev.com>
	
	For the most recent version, visit the Helios Calendar website:
	[http://www.helioscalendar.com]
	
	License Information is found in docs/license.html
	
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	|	Please do not edit this or any of the setup files							|
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
		if(!isset($_SESSION['license']) && !isset($_SESSION['valid'])){?>
			<br /><a href="<?echo CalRoot;?>/setup/" class="eventMain">Click here to begin Helios setup.</a>
<?php	} else {
			if(!isset($_POST['firstname'])){?>
				<script language="JavaScript">
				//<!--
				function checkEmail(obj) {
					if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(obj.value)){
						return 0;
					} else {
						return 1;
					}//end if
				}//end chkEmail
				
				function chkFrm(){
				dirty = 0;
				warn = "Account cannot be created because of the following reasons:\n";
					
					if(document.frm.firstname.value == ''){
						dirty = 1;
						warn = warn + '\n*First Name is Required';
					}//end if
					
					if(document.frm.lastname.value == ''){
						dirty = 1;
						warn = warn + '\n*Last Name is Required';
					}//end if
					
					if(document.frm.email.value == ''){
						dirty = 1;
						warn = warn + '\n*Email is Required';
					}//end if
					
					if(document.frm.email.value != '' && checkEmail(document.frm.email) == 1){
						dirty = 1;
						warn = warn + '\n*Email Format is Invalid';
					}//end if
					
					if(document.frm.password.value == ''){
						dirty = 1;
						warn = warn + '\n*Password is Required';
					}//end if
					
					if(dirty > 0){
						alert(warn + '\n\nPlease make the required changes and try again.');
						return false;
					} else {
						return true;
					}//end if
					
				}//end chkFrm
				//-->
				</script>
				<br />
				Complete the form below with the information for your administration console account.
				<br /><br />
				When setup is complete you will use this account to login to your Helios admin console, so keep it
				for your records.
				<br /><br />
				
				<form name="frm" id="frm" method="post" action="<?php echo CalRoot;?>/setup/index.php?step=4" onsubmit="return chkFrm();">
				<fieldset>
					<legend>Admin Account Settings</legend>
					<div class="frmOpt">
						<label for="firstname">First Name:</label>
						<input tabindex="1" size="20" maxlength="50" type="text" name="firstname" id="firstname" value="" class="setupText" />
					</div>
					<div class="frmOpt">
						<label for="lastname">Last Name:</label>
						<input tabindex="2" size="20" maxlength="50" type="text" name="lastname" id="lastname" value="" class="setupText" />
					</div>
					<div class="frmOpt">
						<label for="email">Email:</label>
						<input tabindex="3" size="30" maxlength="100" type="text" name="email" id="email" value="" class="setupText" />&nbsp;<?php appInstructionsIcon("Admin Email Address", "This will be used as the username for the account."); ?>
					</div>
					<div class="frmOpt">
						<label for="password">Password:</label>
						<input tabindex="4" size="15" maxlength="15" type="password" name="password" id="password" value="" class="setupText" />
					</div>
				</fieldset>
				<br />
				<div align="right"><input tabindex="5" type="submit" name="submit" id="submit" value="Setup Database" class="eventButton" /></div>
				</form>
	<?php	} else {	
				echo "<br />";
				eval(base64_decode(''));
			}//end if
	}//end if