<?php
/*
	Helios Calendar - Professional Event Management System
	Copyright © 2006 Refresh Web Development [http://www.refreshwebdev.com]
	
	Developed By: Chris Carlevato <chris@refreshwebdev.com>
	
	For the most recent version, visit the Helios Calendar website:
	[http://www.helioscalendar.com]
	
	License Information is found in docs/license.html
	
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	|	Modifying Helios Setup files is not permitted and violates the Helios EUL.	|
	|	Please do not edit this or any of the setup files							|
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
	if(!isset($_SESSION['license']) && !isset($_SESSION['valid'])){?>
		<br /><a href="<?echo CalRoot;?>/setup/" class="eventMain">Click here to begin Helios setup.</a>
<?	} else {
		if(!isset($_POST['firstname'])){?>
			<script language="JavaScript">
			//<!--
			function checkEmail(obj) {
				if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(obj.value)){
					return 0;
				} else {
					return 1;
				}//end if
			}//end chkEmail
			
			function chkFrm(){
			dirty = 0;
			warn = "Account cannot be created because of the following reasons:\n";
				
				if(document.frm.firstname.value == ''){
					dirty = 1;
					warn = warn + '\n*First Name is Required';
				}//end if
				
				if(document.frm.lastname.value == ''){
					dirty = 1;
					warn = warn + '\n*Last Name is Required';
				}//end if
				
				if(document.frm.email.value == ''){
					dirty = 1;
					warn = warn + '\n*Email is Required';
				}//end if
				
				if(document.frm.email.value != '' && checkEmail(document.frm.email) == 1){
					dirty = 1;
					warn = warn + '\n*Email Format is Invalid';
				}//end if
				
				if(document.frm.password.value == ''){
					dirty = 1;
					warn = warn + '\n*Password is Required';
				}//end if
				
				if(dirty > 0){
					alert(warn + '\n\nPlease make the required changes and try again.');
					return false;
				} else {
					return true;
				}//end if
				
			}//end chkFrm
			//-->
			</script>
			<br />
			Complete the form below with the information for your administration console account.
			<br /><br />
			When setup is complete you will use this account to login to your Helios admin console, so keep it
			for your records.
			<br /><br />
			
			<form name="frm" id="frm" method="post" action="<?echo CalRoot;?>/setup/index.php?step=4" onsubmit="return chkFrm();">
			<fieldset>
				<legend>Admin Account Settings</legend>
				<div class="frmOpt">
					<label for="firstname">First Name:</label>
					<input tabindex="1" size="20" maxlength="50" type="text" name="firstname" id="firstname" value="" class="setupText" />
				</div>
				<div class="frmOpt">
					<label for="lastname">Last Name:</label>
					<input tabindex="2" size="20" maxlength="50" type="text" name="lastname" id="lastname" value="" class="setupText" />
				</div>
				<div class="frmOpt">
					<label for="email">Email:</label>
					<input tabindex="3" size="30" maxlength="100" type="text" name="email" id="email" value="" class="setupText" />&nbsp;<? appInstructionsIcon("Admin Email Address", "This will be used as the username for the account."); ?>
				</div>
				<div class="frmOpt">
					<label for="password">Password:</label>
					<input tabindex="4" size="15" maxlength="15" type="text" name="password" id="password" value="" class="setupText" />
				</div>
			</fieldset>
			<br />
			<div align="right"><input tabindex="5" type="submit" name="submit" id="submit" value="Setup Database" class="eventButton" /></div>
			</form>
	<?	} else {	
			echo "<br />";
			eval(base64_decode('LypJZiB5b3UgY2FuIHJlYWQgdGhpcyB5b3UgaGF2ZSBicm9rZW4gdGhlIEhlbGlvcyBFVUwuKi8/Pg0KCQkJU2V0dXAgd2lsbCBub3cgYXR0ZW1wdCB0byBjcmVhdGUgeW91ciBIZWxpb3MgZGF0YWJhc2UuLi48YnIgLz48YnIgLz4NCgkJPD8JJGRiY29ubmVjdGlvbiA9IG15c3FsX2Nvbm5lY3QoREFUQUJBU0VfSE9TVCwgREFUQUJBU0VfVVNFUiwgREFUQUJBU0VfUEFTUyk7DQoJCQkNCgkJCSRzdG9wID0gMDsNCgkJCW15c3FsX3NlbGVjdF9kYihEQVRBQkFTRV9OQU1FLCRkYmNvbm5lY3Rpb24pOw0KCQkJZWNobyAiQ2hlY2tpbmcgPGk+IiAuIERBVEFCQVNFX05BTUUgLiAiPC9pPiBkYXRhYmFzZS4uLiI7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIkNSRUFURSBEQVRBQkFTRSBJRiBOT1QgRVhJU1RTICIgLiBEQVRBQkFTRV9OQU1FKTsNCgkJCWlmKG15c3FsX2FmZmVjdGVkX3Jvd3MoKSA+IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICJDcmVhdGVkPGJyIC8+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiQWxyZWFkeSBFeGlzdHM8YnIgLz4iOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJhZG1pbjwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gImFkbWluIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsRmlyc3ROYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxMYXN0TmFtZSB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsRW1haWwgdmFyY2hhcigxMDApIGRlZmF1bHQgTlVMTCxQYXNzd3JkIHZhcmNoYXIoMjApIGRlZmF1bHQgTlVMTCxJc0FjdGl2ZSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLExvZ2luQ250IGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsTGFzdExvZ2luIGRhdGV0aW1lIGRlZmF1bHQgTlVMTCxTdXBlckFkbWluIHRpbnlpbnQoMykgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsU2hvd0luc3RydWN0aW9ucyB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLFBSSU1BUlkgS0VZICAoUGtJRCksVU5JUVVFIEtFWSBQa0lEIChQa0lEKSxLRVkgUGtJRF8yIChQa0lEKSkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJhZG1pbiciKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQllY2hvICI8YnIgLz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtDcmVhdGluZyBBZG1pbiBBY2NvdW50Li4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gImFkbWluIFZBTFVFUygnMScsJyIgLiAkX1BPU1RbJ2ZpcnN0bmFtZSddIC4gIicsJyIgLiAkX1BPU1RbJ2xhc3RuYW1lJ10gLiAiJywnIiAuICRfUE9TVFsnZW1haWwnXSAuICInLCciIC4gJF9QT1NUWydwYXNzd29yZCddIC4gIicsJzEnLCAnMCcsIE5VTEwsICcwJywgJzEnKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NICIgLiBIQ19UYmxQcmVmaXggLiAiYWRtaW4iKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJhZG1pbmxvZ2luaGlzdG9yeTwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gImFkbWlubG9naW5oaXN0b3J5IChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsQWRtaW5JRCBpbnQoMTEpIHVuc2lnbmVkIGRlZmF1bHQgTlVMTCxJUCB2YXJjaGFyKDE2KSBkZWZhdWx0IE5VTEwsQ2xpZW50IHZhcmNoYXIoMTAwKSBkZWZhdWx0IE5VTEwsTG9naW5UaW1lIGRhdGV0aW1lIGRlZmF1bHQgTlVMTCxQUklNQVJZIEtFWSAgKFBrSUQpLFVOSVFVRSBLRVkgUGtJRCAoUGtJRCksS0VZIFBrSURfMiAoUGtJRCkpOyIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gImFkbWlubG9naW5oaXN0b3J5JyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gImFkbWlucGVybWlzc2lvbnM8L2k+IHRhYmxlLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJDUkVBVEUgVEFCTEUgIiAuIEhDX1RibFByZWZpeCAuICJhZG1pbnBlcm1pc3Npb25zIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsRXZlbnRFZGl0IGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxFdmVudFBlbmRpbmcgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLEV2ZW50Q2F0ZWdvcnkgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFVzZXJFZGl0IGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxBZG1pbkVkaXQgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLE5ld3NsZXR0ZXIgaW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFNldHRpbmdzIGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxSZXBvcnRzIGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxBZG1pbklEIGludCgxMSkgdW5zaWduZWQgZGVmYXVsdCBOVUxMLElzQWN0aXZlIGludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxQUklNQVJZIEtFWSAgKFBrSUQpKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gImFkbWlucGVybWlzc2lvbnMnIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJZWNobyAiPGJyIC8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7U2V0dGluZyBBZG1pbiBQZXJtaXNzaW9uLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gImFkbWlucGVybWlzc2lvbnMgVkFMVUVTKCcxJywgJzEnLCAnMScsICcxJywgJzEnLCAnMScsICcxJywgJzEnLCAnMScsICcxJywgJzEnKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NICIgLiBIQ19UYmxQcmVmaXggLiAiYWRtaW5wZXJtaXNzaW9ucyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gImNhdGVnb3JpZXM8L2k+IHRhYmxlLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJDUkVBVEUgVEFCTEUgIiAuIEhDX1RibFByZWZpeCAuICJjYXRlZ29yaWVzIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsQ2F0ZWdvcnlOYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxQYXJlbnRJRCBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLElzQWN0aXZlIHRpbnlpbnQoMykgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMScsUGF0aCB2YXJjaGFyKDEwMCkgTk9UIE5VTEwgZGVmYXVsdCAnLycsTGV2ZWwgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxQUklNQVJZIEtFWSAgKFBrSUQpLFVOSVFVRSBLRVkgUGtJRCAoUGtJRCksS0VZIFBrSURfMiAoUGtJRCkpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAiY2F0ZWdvcmllcyciKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQllY2hvICI8YnIgLz4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtBZGRpbmcgRGVmYXVsdCBDYXRlZ29yeS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJjYXRlZ29yaWVzIFZBTFVFUygnMScsICdFdmVudHMnLCAnMCcsICcxJywgJy8nLCAnMCcpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNFTEVDVCAqIEZST00gIiAuIEhDX1RibFByZWZpeCAuICJjYXRlZ29yaWVzIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJDQoJCQkNCgkJCWVjaG8gIjxiciAvPkNyZWF0aW5nIDxpPiIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRjYXRlZ29yaWVzPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRjYXRlZ29yaWVzIChFdmVudElEIGludCgxMSkgdW5zaWduZWQgZGVmYXVsdCBOVUxMLENhdGVnb3J5SUQgaW50KDExKSB1bnNpZ25lZCBkZWZhdWx0IE5VTEwsS0VZIEV2ZW50SUQgKEV2ZW50SUQpLEtFWSBDYXRlZ29yeUlEIChDYXRlZ29yeUlEKSkiKTsNCgkJCSRyZXN1bHQgPSBteXNxbF9xdWVyeSgiU0hPVyBUQUJMRSBTVEFUVVMgRlJPTSAiIC4gREFUQUJBU0VfTkFNRSAuICIgTElLRSAnIiAuIEhDX1RibFByZWZpeCAuICJldmVudGNhdGVnb3JpZXMnIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJZWNobyAiPGJyIC8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Q3JlYXRpbmcgRGVmYXVsdCBFdmVudC9DYXRlZ29yeSBQYWlyaW5nLi4uIjsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gImV2ZW50Y2F0ZWdvcmllcyBWQUxVRVMoCScxJywgJzEnKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTRUxFQ1QgKiBGUk9NICIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRjYXRlZ29yaWVzIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJDQoJCQkNCgkJCWVjaG8gIjxiciAvPkNyZWF0aW5nIDxpPiIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRzPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRzIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsVGl0bGUgdmFyY2hhcigxNTApIGRlZmF1bHQgTlVMTCxMb2NhdGlvbk5hbWUgdmFyY2hhcig1MCkgZGVmYXVsdCBOVUxMLExvY2F0aW9uQWRkcmVzcyB2YXJjaGFyKDc1KSBkZWZhdWx0IE5VTEwsTG9jYXRpb25BZGRyZXNzMiB2YXJjaGFyKDc1KSBkZWZhdWx0IE5VTEwsTG9jYXRpb25DaXR5IHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxMb2NhdGlvblN0YXRlIHZhcmNoYXIoMzApIGRlZmF1bHQgTlVMTCxMb2NhdGlvblppcCB2YXJjaGFyKDExKSBkZWZhdWx0IE5VTEwsRGVzY3JpcHRpb24gbWVkaXVtdGV4dCxTdGFydERhdGUgZGF0ZSBkZWZhdWx0IE5VTEwsU3RhcnRUaW1lIHRpbWUgZGVmYXVsdCBOVUxMLFRCRCBpbnQoMykgZGVmYXVsdCBOVUxMLEVuZFRpbWUgdGltZSBkZWZhdWx0IE5VTEwsQ29udGFjdE5hbWUgdmFyY2hhcig1MCkgZGVmYXVsdCBOVUxMLENvbnRhY3RFbWFpbCB2YXJjaGFyKDc1KSBkZWZhdWx0IE5VTEwsQ29udGFjdFBob25lIHZhcmNoYXIoMTUpIGRlZmF1bHQgTlVMTCxJc0FjdGl2ZSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLElzQXBwcm92ZWQgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxJc0JpbGxib2FyZCB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFNlcmllc0lEIHZhcmNoYXIoMjApIGRlZmF1bHQgTlVMTCxTdWJtaXR0ZWRCeU5hbWUgdmFyY2hhcig1MCkgZGVmYXVsdCBOVUxMLFN1Ym1pdHRlZEJ5RW1haWwgdmFyY2hhcig3NSkgZGVmYXVsdCBOVUxMLFN1Ym1pdHRlZEF0IGRhdGV0aW1lIGRlZmF1bHQgTlVMTCxBbGVydFNlbnQgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxDb250YWN0VVJMIHZhcmNoYXIoMTAwKSBkZWZhdWx0IE5VTEwsQWxsb3dSZWdpc3RlciB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFNwYWNlc0F2YWlsYWJsZSBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFB1Ymxpc2hEYXRlIGRhdGV0aW1lIGRlZmF1bHQgTlVMTCxWaWV3cyBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLE1lc3NhZ2UgbG9uZ3RleHQsRGlyZWN0aW9ucyBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLERvd25sb2FkcyBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLEVtYWlsVG9GcmllbmQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxVUkxDbGlja3MgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxNVmlld3MgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxQUklNQVJZIEtFWSAgKFBrSUQpLFVOSVFVRSBLRVkgUGtJRCAoUGtJRCksS0VZIFBrSURfMiAoUGtJRCkpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRzJyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCWVjaG8gIjxiciAvPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO0NyZWF0aW5nIERlZmF1bHQgRXZlbnQuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAiZXZlbnRzIFZBTFVFUygnMScsJyIgLiBDYWxOYW1lIC4gIiBPcGVucycsJ09uIG91ciB3ZWJzaXRlJywnNjAgTW9ucm9lIENlbnRlciBTdCBOVycsTlVMTCwnR3JhbmQgUmFwaWRzJywnTUknLCc0OTUwMycsJyBXZWxjb21lIHRvIHlvdXIgbmV3IEhlbGlvcyBDYWxlbmRhciBwb3dlcmVkIGV2ZW50IHdlYnNpdGUuPGJyIC8+PGJyIC8+SGVyZSBhcmUgYSBmZXcgbGlua3MgeW91IHdpbGwgcHJvYmFibHkgd2FudCB0byBrZWVwIGNsb3NlLjxiciAvPjxiciAvPjxhIGhyZWY9XCJodHRwOi8vd3d3LmhlbGlvc2NhbGVuZGFyLmNvbVwiIGNsYXNzPVwiZXZlbnRNYWluXCIgdGFyZ2V0PVwibmV3XCI+SGVsaW9zIFdlYnNpdGU8L2E+PGJyIC8+IDxhIGhyZWY9XCJodHRwOi8vY29kZXguaGVsaW9zY2FsZW5kYXIuY29tXCIgY2xhc3M9XCJldmVudE1haW5cIiB0YXJnZXQ9XCJuZXdcIj5UaGUgQ29kZXg8L2E+PGJyIC8+IDxhIGhyZWY9XCJodHRwOi8vZGV2LmhlbGlvc2NhbGVuZGFyLmNvbVwiIGNsYXNzPVwiZXZlbnRNYWluXCIgdGFyZ2V0PVwibmV3XCI+VGhlIERldmVsb3BtZW50IEJsb2c8L2E+PGJyIC8+PGJyIC8+VGhhbmsgeW91IGZvciBjaG9vc2luZyBIZWxpb3MuJywnIiAuIGRhdGUoIlktbS1kIikgLiAiJyxOVUxMLCcxJyxOVUxMLE5VTEwsTlVMTCxOVUxMLCcxJywnMScsJzEnLE5VTEwsTlVMTCxOVUxMLE5VTEwsJzAnLCciIC4gQ2FsUm9vdCAuICInLCcwJywnMCcsJyIgLiBkYXRlKCJZLW0tZCIpIC4gIiAwMDowMDowMCcsJzAnLE5VTEwsJzAnLCcwJywnMCcsJzAnLCcwJyk7Iik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNFTEVDVCAqIEZST00gIiAuIEhDX1RibFByZWZpeCAuICJldmVudHMiKTsNCgkJCWlmKG15c3FsX251bV9yb3dzKCRyZXN1bHQpID09IDApew0KCQkJCSRzdG9wID0gMTsNCgkJCQllY2hvICI8Yj5GYWlsZWQ8L2I+IjsNCgkJCX0gZWxzZSB7DQoJCQkJZWNobyAiRmluaXNoZWQiOw0KCQkJfS8vZW5kIGlmDQoJCQkNCgkJCQ0KCQkJZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJuZXdzbGV0dGVyczwvaT4gdGFibGUuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIkNSRUFURSBUQUJMRSAiIC4gSENfVGJsUHJlZml4IC4gIm5ld3NsZXR0ZXJzIChQa0lEIGludCgxMSkgdW5zaWduZWQgTk9UIE5VTEwgYXV0b19pbmNyZW1lbnQsVGVtcGxhdGVOYW1lIHZhcmNoYXIoMjUwKSBkZWZhdWx0IE5VTEwsVGVtcGxhdGVTb3VyY2UgbG9uZ3RleHQsSXNBY3RpdmUgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcwJyxQUklNQVJZIEtFWSAgKFBrSUQpLFVOSVFVRSBLRVkgUGtJRCAoUGtJRCksS0VZIFBrSURfMiAoUGtJRCkpIik7ZWNobyAiRmluaXNoZWQiO2VjaG8gIjxiciAvPkNyZWF0aW5nIDxpPiIgLiBIQ19UYmxQcmVmaXggLiAicmVnaXN0cmFudHM8L2k+IHRhYmxlLi4uIjtteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAicmVnaXN0cmFudHMgKFBrSUQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBhdXRvX2luY3JlbWVudCxOYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxFbWFpbCB2YXJjaGFyKDc1KSBkZWZhdWx0IE5VTEwsUGhvbmUgdmFyY2hhcigxNSkgZGVmYXVsdCBOVUxMLEFkZHJlc3MgdmFyY2hhcig3NSkgZGVmYXVsdCBOVUxMLEFkZHJlc3MyIHZhcmNoYXIoNzUpIGRlZmF1bHQgTlVMTCxDaXR5IHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxTdGF0ZSBjaGFyKDIpIGRlZmF1bHQgTlVMTCxaaXAgdmFyY2hhcig1KSBkZWZhdWx0IE5VTEwsRXZlbnRJRCBpbnQoMTEpIHVuc2lnbmVkIGRlZmF1bHQgTlVMTCxJc0FjdGl2ZSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzEnLFJlZ2lzdGVyZWRBdCBkYXRldGltZSBkZWZhdWx0IE5VTEwsUFJJTUFSWSBLRVkgIChQa0lEKSxVTklRVUUgS0VZIFBrSUQgKFBrSUQpLEtFWSBQa0lEXzIgKFBrSUQpKSIpO2VjaG8gIkZpbmlzaGVkIjtlY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gInNlbmR0b2ZyaWVuZDwvaT4gdGFibGUuLi4iO215c3FsX3F1ZXJ5KCJDUkVBVEUgVEFCTEUgIiAuIEhDX1RibFByZWZpeCAuICJzZW5kdG9mcmllbmQgKFBrSUQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBhdXRvX2luY3JlbWVudCxNeU5hbWUgdmFyY2hhcigxMDApIGRlZmF1bHQgTlVMTCxNeUVtYWlsIHZhcmNoYXIoMTAwKSBkZWZhdWx0IE5VTEwsUmVjaXBpZW50TmFtZSB2YXJjaGFyKDEwMCkgZGVmYXVsdCBOVUxMLFJlY2lwaWVudEVtYWlsIHZhcmNoYXIoMTAwKSBkZWZhdWx0IE5VTEwsTWVzc2FnZSBsb25ndGV4dCxFdmVudElEIGludCgxMSkgdW5zaWduZWQgZGVmYXVsdCBOVUxMLElQQWRkcmVzcyB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsU2VuZERhdGUgZGF0ZXRpbWUgZGVmYXVsdCBOVUxMLFBSSU1BUlkgS0VZICAoUGtJRCksVU5JUVVFIEtFWSBQa0lEIChQa0lEKSxLRVkgUGtJRF8yIChQa0lEKSkiKTtlY2hvICJGaW5pc2hlZCI7ZWNobyAiPGJyIC8+Q3JlYXRpbmcgPGk+IiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5nczwvaT4gdGFibGUuLi4iO215c3FsX3F1ZXJ5KCJDUkVBVEUgVEFCTEUgIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyAoUGtJRCBpbnQoMTEpIHVuc2lnbmVkIE5PVCBOVUxMIGF1dG9faW5jcmVtZW50LFNldHRpbmdWYWx1ZSB0ZXh0LFBSSU1BUlkgS0VZICAoUGtJRCksVU5JUVVFIEtFWSBQa0lEIChQa0lEKSxLRVkgUGtJRF8yIChQa0lEKSk7Iik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAibmV3c2xldHRlcnMnIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJZWNobyAiPGJyIC8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Q29uZmlndXJpbmcgRGVmYXVsdCBTZXR0aW5ncy4uLiI7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzEnLCAnMScpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcyJywgJzIwJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzMnLCAnWW91ciBldmVudCBoYXMgYmVlbiBhcHByb3ZlZCBhbmQgaXMgbm93IGF2YWlsYWJsZSBvbiBvdXIgd2Vic2l0ZS4gV2UgaG9wZSB5b3UgY29udGludWUgdG8gdXNlIG91ciBjYWxlbmRhciBhbmQgc3VibWl0IG1vcmUgZXZlbnRzIGluIHRoZSBmdXR1cmUuIFRoYW5rIHlvdSBmb3IgdXNpbmcgb3VyIGNhbGVuZGFyIGFuZCBpZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb25zIHBsZWFzZSBmZWVsIGZyZWUgdG8gY29udGFjdCB1cy4nKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnNCcsICdZb3VyIGV2ZW50IGhhcyBiZWVuIGRlY2xpbmVkIGFuZCB3aWxsIG5vdCBiZSBhdmFpbGFibGUgb24gb3VyIHdlYnNpdGUuIFBsZWFzZSBkbyBub3QgbGV0IHRoaXMgZGlzY291cmFnZSB5b3UgZnJvbSBzdWJtaXRpbmcgbW9yZSBldmVudHMgaW4gdGhlIGZ1dHVyZS4gVGhhbmsgeW91IGZvciB1c2luZyBvdXIgY2FsZW5kYXIgYW5kIGlmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMgcGxlYXNlIGZlZWwgZnJlZSB0byBjb250YWN0IHVzLicpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCc1JywgJ0hlbGlvcywgQ2FsZW5kYXInKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnNicsICdQb3dlcmVkIGJ5IHRoZSBIZWxpb3MgQ2FsZW5kYXIuJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzcnLCAnMScpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCc4JywgJzAnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnOScsICcwJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzEwJywgJzEwJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzExJywgJzEnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTInLCAnMTAnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTMnLCAnMScpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcxNCcsICdGIGRTLCBZJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzE1JywgJzEnKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTYnLCAnIiAuICRfU0VTU0lPTlsncmVnbmFtZSddIC4gIicpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcxNycsICciIC4gJF9TRVNTSU9OWydyZWd1cmwnXSAuICInKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTgnLCAnIiAuICRfU0VTU0lPTlsncmVnZW1haWwnXSAuICInKTsiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInNldHRpbmdzIFZBTFVFUygnMTknLCAnIiAuICRfU0VTU0lPTlsncmVnY29kZSddIC4gIicpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcyMCcsIE5VTEwpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcyMScsICdNSScpOyIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAic2V0dGluZ3MgVkFMVUVTKCcyMicsICcwJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzIzJywgJ2g6SSBBJyk7Iik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyBWQUxVRVMoJzI0JywgJ20vZC9ZJyk7Iik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNFTEVDVCAqIEZST00gIiAuIEhDX1RibFByZWZpeCAuICJzZXR0aW5ncyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gInVzZXJjYXRlZ29yaWVzPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcmNhdGVnb3JpZXMgKFVzZXJJRCBpbnQoMTEpIHVuc2lnbmVkIGRlZmF1bHQgTlVMTCxDYXRlZ29yeUlEIGludCgxMSkgdW5zaWduZWQgZGVmYXVsdCBOVUxMLEtFWSBDYXRlZ29yeUlEIChDYXRlZ29yeUlEKSxLRVkgVXNlcklEIChVc2VySUQpKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gInVzZXJjYXRlZ29yaWVzJyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gKFBrSUQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBhdXRvX2luY3JlbWVudCxPY2N1cGF0aW9uIHZhcmNoYXIoMTAwKSBkZWZhdWx0IE5VTEwsSXNBY3RpdmUgdGlueWludCgzKSB1bnNpZ25lZCBOT1QgTlVMTCBkZWZhdWx0ICcxJyxQUklNQVJZIEtFWSAgKFBrSUQpLFVOSVFVRSBLRVkgUGtJRCAoUGtJRCksS0VZIFBrSURfMiAoUGtJRCkpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNIT1cgVEFCTEUgU1RBVFVTIEZST00gIiAuIERBVEFCQVNFX05BTUUgLiAiIExJS0UgJyIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24nIik7DQoJCQlpZihteXNxbF9udW1fcm93cygkcmVzdWx0KSA9PSAwKXsNCgkJCQkkc3RvcCA9IDE7DQoJCQkJZWNobyAiPGI+RmFpbGVkPC9iPiI7DQoJCQl9IGVsc2Ugew0KCQkJCWVjaG8gIkZpbmlzaGVkIjsNCgkJCX0vL2VuZCBpZg0KCQkJZWNobyAiPGJyIC8+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Q3JlYXRpbmcgVXNlciBPY2N1cGF0aW9uIE9wdGlvbnMuLi4iOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxJywgJ0FjY291bnRpbmcvRmluYW5jaWFsJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcyJywgJ0NvbXB1dGVyIFJlbGF0ZWQgKG90aGVyKScsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMycsICdDb21wdXRlciBSZWxhdGVkIChpbnRlcm5ldCknLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzQnLCAnQ29uc3VsdGluZycsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnNScsICdDdXN0b21lciBTZXJ2aWNlL1N1cHBvcnQnLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzYnLCAnRWR1Y2F0aW9uL1RyYWluaW5nJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCc3JywgJ0VuZ2luZWVyaW5nJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCc4JywgJ0V4ZWN1dGl2ZS9TZW5pb3IgTWFuYWdlbWVudCcsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnOScsICdHZW5lcmFsIEFkbWluaXN0cmF0aXZlL1N1cGVydmlzb3InLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzEwJywgJ0dvdmVybm1lbnQvTWlsaXRhcnknLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzExJywgJ0hvbWVtYWtlcicsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMTInLCAnTWFudWZhY3R1cmluZy9Qcm9kdWN0aW9uL09wZXJhdGlvbnMnLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzEzJywgJ1Byb2Zlc3Npb25hbCAoTWVkaWNhbC4gTGVnYWwuIEV0YyknLCAnMScpIik7DQoJCQlteXNxbF9xdWVyeSgiSU5TRVJUIElOVE8gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiBWQUxVRVMoJzE0JywgJ1Jlc2VhcmNoIGFuZCBEZXZlbG9wbWVudCcsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMTUnLCAnUmV0aXJlZCcsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMTYnLCAnU2FsZXMvTWFya2V0aW5nL0FkdmVydGlzaW5nJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxNycsICdTZWxmLUVtcGxveWVkL093bmVyJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxOCcsICdTdHVkZW50JywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcxOScsICdUcmFkZXNtYW4vQ3JhZnRzbWFuJywgJzEnKSIpOw0KCQkJbXlzcWxfcXVlcnkoIklOU0VSVCBJTlRPICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcm9jY3VwYXRpb24gVkFMVUVTKCcyMCcsICdVbmVtcGxveWVkL0JldHdlZW4gSm9icycsICcxJykiKTsNCgkJCW15c3FsX3F1ZXJ5KCJJTlNFUlQgSU5UTyAiIC4gSENfVGJsUHJlZml4IC4gInVzZXJvY2N1cGF0aW9uIFZBTFVFUygnMjEnLCAnT3RoZXInLCAnMScpIik7DQoJCQkkcmVzdWx0ID0gbXlzcWxfcXVlcnkoIlNFTEVDVCAqIEZST00gIiAuIEhDX1RibFByZWZpeCAuICJ1c2Vyb2NjdXBhdGlvbiIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJDQoJCQllY2hvICI8YnIgLz5DcmVhdGluZyA8aT4iIC4gSENfVGJsUHJlZml4IC4gInVzZXJzPC9pPiB0YWJsZS4uLiI7DQoJCQlteXNxbF9xdWVyeSgiQ1JFQVRFIFRBQkxFICIgLiBIQ19UYmxQcmVmaXggLiAidXNlcnMgKFBrSUQgaW50KDExKSB1bnNpZ25lZCBOT1QgTlVMTCBhdXRvX2luY3JlbWVudCxGaXJzdE5hbWUgdmFyY2hhcig1MCkgZGVmYXVsdCBOVUxMLExhc3ROYW1lIHZhcmNoYXIoNTApIGRlZmF1bHQgTlVMTCxFbWFpbCB2YXJjaGFyKDc1KSBkZWZhdWx0IE5VTEwsT2NjdXBhdGlvbklEIGludCgxMSkgZGVmYXVsdCBOVUxMLFppcCB2YXJjaGFyKDEwKSBkZWZhdWx0IE5VTEwsSXNSZWdpc3RlcmVkIHRpbnlpbnQoMykgdW5zaWduZWQgTk9UIE5VTEwgZGVmYXVsdCAnMCcsR1VJRCB2YXJjaGFyKDUwKSBkZWZhdWx0IE5VTEwsQWRkZWRCeSB0aW55aW50KDMpIHVuc2lnbmVkIE5PVCBOVUxMIGRlZmF1bHQgJzAnLFJlZ2lzdGVyZWRBdCBkYXRldGltZSBkZWZhdWx0IE5VTEwsUmVnaXN0ZXJJUCB2YXJjaGFyKDE1KSBkZWZhdWx0IE5VTEwsUFJJTUFSWSBLRVkgIChQa0lEKSxVTklRVUUgS0VZIFBrSUQgKFBrSUQpLEtFWSBQa0lEXzIgKFBrSUQpKSIpOw0KCQkJJHJlc3VsdCA9IG15c3FsX3F1ZXJ5KCJTSE9XIFRBQkxFIFNUQVRVUyBGUk9NICIgLiBEQVRBQkFTRV9OQU1FIC4gIiBMSUtFICciIC4gSENfVGJsUHJlZml4IC4gInVzZXJzJyIpOw0KCQkJaWYobXlzcWxfbnVtX3Jvd3MoJHJlc3VsdCkgPT0gMCl7DQoJCQkJJHN0b3AgPSAxOw0KCQkJCWVjaG8gIjxiPkZhaWxlZDwvYj4iOw0KCQkJfSBlbHNlIHsNCgkJCQllY2hvICJGaW5pc2hlZCI7DQoJCQl9Ly9lbmQgaWYNCgkJCQ0KCQkJaWYoJHN0b3AgPT0gMSl7CT8+DQoJCQkJPGJyIC8+PGJyIC8+DQoJCQkJU2V0dXAgd2FzIHVuYWJsZSB0byBzdWNjZXNzZnVsbHkgY3JlYXRlIHlvdXIgSGVsaW9zIGRhdGFiYXNlLiBQbGVhc2UgdmVyaWZ5IHlvdXIgZGF0YWJhc2UgdXNlcg0KCQkJCWFjY291bnQgaXMgc2V0dXAgY29ycmVjdGx5LCBhbmQgaGFzIENyZWF0ZSBwZXJtaXNzaW9ucy48YnIgLz48YnIgLz5UaGVuIDxhIGhyZWY9Ijw/ZWNobyBDYWxSb290Oz8+L3NldHVwL2luZGV4LnBocD9zdGVwPTQiIGNsYXNzPSJldmVudE1haW4iPnRyeSB0aGlzIHN0ZXAgYWdhaW48L2E+Lg0KCQk8Pwl9IGVsc2Ugewk/Pg0KCQkJCTxiciAvPjxiciAvPg0KCQkJCUNvbmdyYXR1bGF0aW9ucy4gU2V0dXAgb2YgeW91ciBIZWxpb3MgQ2FsZW5kYXIgaXMgY29tcGxldGUuPGJyIC8+DQoJCQkJUGxlYXNlIGJlIHN1cmUgdG8gPGI+ZGVsZXRlIHRoZSBzZXR1cCBkaXJlY3Rvcnk8L2I+IGJlZm9yZSB1c2luZyBIZWxpb3MuDQoJCQkJPGJyIC8+PGJyIC8+DQoJDQoJCQkJPGEgaHJlZj0iPD9lY2hvIENhbFJvb3Q7Pz4vIiBjbGFzcz0iZXZlbnRNYWluIiB0YXJnZXQ9Il9ibGFuayI+Q2xpY2sgSGVyZSBGb3IgWW91ciBIZWxpb3MgUHVibGljIENhbGVuZGFyPC9hPg0KCQkJCTxiciAvPg0KCQkJCTxhIGhyZWY9Ijw/ZWNobyBDYWxBZG1pblJvb3Q7Pz4vIiBjbGFzcz0iZXZlbnRNYWluIiB0YXJnZXQ9Il9ibGFuayI+Q2xpY2sgSGVyZSBGb3IgWW91ciBIZWxpb3MgQWRtaW5pc3RyYXRpb24gQ29uc29sZTwvYT4NCgkJPD8JfS8vZW5kIGlm'));
		}//end if
}//end if